# Generated by Django 2.2.10 on 2020-03-07 12:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0003_auto_20200306_2238'),
    ]

    operations = [
        migrations.CreateModel(
            name='InsuranceApply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('car_number', models.CharField(max_length=100, null=True, verbose_name='车牌')),
                ('car_brand', models.CharField(blank=True, max_length=255, null=True, verbose_name='汽车品牌')),
                ('car_model', models.CharField(blank=True, max_length=255, null=True, verbose_name='汽车型号')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='名字')),
                ('mobile', models.CharField(max_length=255, null=True, verbose_name='手机')),
                ('service_type', models.IntegerField(blank=True, choices=[(1, '车辆续保'), (2, '保险分期'), (3, '购车贷款')], null=True, verbose_name='类别')),
                ('insurance_date', models.DateField(blank=True, null=True, verbose_name='保单开始日期')),
                ('is_checked', models.BooleanField(default=False, verbose_name='已联系/已确认')),
                ('data_import', models.BooleanField(default=False, verbose_name='数据导入')),
                ('notes', models.TextField(blank=True, max_length=1000, null=True, verbose_name='备注')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='记录时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('checked_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='insurance_apply_check_by', to='app.Superior', verbose_name='由谁联系')),
                ('confirmed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='insurance_apply_confirmed_by', to=settings.AUTH_USER_MODEL, verbose_name='审核人员')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='insurance_apply_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建人员')),
                ('related_record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.InsuranceRecord', verbose_name='关联记录')),
            ],
            options={
                'verbose_name': '保险服务申请',
                'verbose_name_plural': '保险服务申请',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='ServiceApply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('car_number', models.CharField(max_length=100, null=True, verbose_name='车牌')),
                ('car_brand', models.CharField(blank=True, max_length=255, null=True, verbose_name='汽车品牌')),
                ('car_model', models.CharField(blank=True, max_length=255, null=True, verbose_name='汽车型号')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='名字')),
                ('mobile', models.CharField(max_length=255, null=True, verbose_name='手机')),
                ('reserve_type', models.IntegerField(blank=True, choices=[(1, '上门'), (2, '到店')], null=True, verbose_name='类型')),
                ('reserve_time', models.DateTimeField(blank=True, null=True, verbose_name='服务时间')),
                ('reserve_address', models.TextField(blank=True, max_length=1000, null=True, verbose_name='服务地点')),
                ('is_checked', models.BooleanField(default=False, verbose_name='已联系/已确认')),
                ('data_import', models.BooleanField(default=False, verbose_name='数据导入')),
                ('notes', models.TextField(blank=True, max_length=1000, null=True, verbose_name='备注')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='记录时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('checked_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_apply_check_by', to='app.Superior', verbose_name='由谁联系')),
                ('confirmed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_apply_confirmed_by', to=settings.AUTH_USER_MODEL, verbose_name='审核人员')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_apply_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建人员')),
            ],
            options={
                'verbose_name': '维修服务申请',
                'verbose_name_plural': '维修服务申请',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='ServiceRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reserve_type', models.IntegerField(blank=True, choices=[(1, '上门'), (2, '到店')], null=True, verbose_name='类型')),
                ('is_reversed', models.BooleanField(default=False, verbose_name='是预约服务')),
                ('reserve_time', models.DateTimeField(blank=True, null=True, verbose_name='服务时间')),
                ('reserve_address', models.TextField(blank=True, max_length=1000, null=True, verbose_name='服务地点')),
                ('is_checked', models.BooleanField(default=False, verbose_name='已联系/已确认')),
                ('is_served', models.BooleanField(default=False, verbose_name='服务已完成')),
                ('notes', models.TextField(blank=True, max_length=1000, null=True, verbose_name='备注')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='记录时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('car', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.CarInfo', verbose_name='车辆信息')),
                ('checked_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_record_check_by', to='app.Superior', verbose_name='由谁联系')),
                ('confirmed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_record_confirmed_by', to=settings.AUTH_USER_MODEL, verbose_name='审核人员')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_record_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建人员')),
            ],
            options={
                'verbose_name': '服务记录',
                'verbose_name_plural': '服务记录',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='StoreInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True, unique=True, verbose_name='名称')),
                ('contact', models.CharField(blank=True, max_length=200, null=True, verbose_name='联系电话')),
                ('address', models.TextField(blank=True, max_length=1000, null=True, verbose_name='地址')),
                ('desc', models.TextField(blank=True, max_length=2000, null=True, verbose_name='介绍')),
            ],
            options={
                'verbose_name': '门店信息',
                'verbose_name_plural': '门店信息',
                'ordering': ['id'],
            },
        ),
        migrations.AlterField(
            model_name='insurancecompany',
            name='name',
            field=models.CharField(max_length=200, null=True, unique=True, verbose_name='保险出单公司'),
        ),
        migrations.AlterField(
            model_name='servicepackage',
            name='name',
            field=models.CharField(max_length=200, null=True, unique=True, verbose_name='名称'),
        ),
        migrations.AlterField(
            model_name='servicepackagetype',
            name='name',
            field=models.CharField(max_length=200, null=True, unique=True, verbose_name='名称'),
        ),
        migrations.AlterField(
            model_name='userlevel',
            name='level_code',
            field=models.SmallIntegerField(null=True, unique=True, verbose_name='等级编号'),
        ),
        migrations.DeleteModel(
            name='ServiceReserve',
        ),
        migrations.AddField(
            model_name='servicerecord',
            name='related_store',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.StoreInfo', verbose_name='门店'),
        ),
        migrations.AddField(
            model_name='servicerecord',
            name='served_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_record_served_by', to='app.Superior', verbose_name='由谁服务'),
        ),
        migrations.AddField(
            model_name='servicerecord',
            name='service_package',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.ServicePackage', verbose_name='服务套餐'),
        ),
        migrations.AddField(
            model_name='serviceapply',
            name='related_record',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.ServiceRecord', verbose_name='关联记录'),
        ),
        migrations.AddField(
            model_name='serviceapply',
            name='related_store',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.StoreInfo', verbose_name='门店'),
        ),
        migrations.AddField(
            model_name='serviceapply',
            name='service_package',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.ServicePackage', verbose_name='服务套餐'),
        ),
    ]
