# Generated by Django 2.2.10 on 2020-03-07 12:46

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='WxUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('openid', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='微信OpenID')),
                ('avatar_url', models.URLField(blank=True, null=True, verbose_name='头像')),
                ('nick_name', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='昵称')),
                ('gender', models.SmallIntegerField(blank=True, choices=[(1, '男'), (2, '女'), (0, '未知')], null=True, verbose_name='性别')),
                ('language', models.CharField(blank=True, max_length=100, null=True, verbose_name='语言')),
                ('city', models.CharField(blank=True, max_length=200, null=True, verbose_name='城市')),
                ('province', models.CharField(blank=True, max_length=200, null=True, verbose_name='省份')),
                ('country', models.CharField(blank=True, max_length=200, null=True, verbose_name='国家')),
                ('full_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='真实姓名')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='出生日期')),
                ('desc', models.TextField(blank=True, max_length=2000, null=True, verbose_name='描述')),
                ('mobile', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='手机号')),
                ('current_credits', models.BigIntegerField(blank=True, default=0, null=True, verbose_name='当前积分')),
                ('is_partner', models.BooleanField(default=False, verbose_name='是合伙人')),
                ('is_client', models.BooleanField(default=True, verbose_name='是客户')),
                ('is_manager', models.BooleanField(default=False, verbose_name='是管理员')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='记录时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BelongTo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True, unique=True, verbose_name='名称')),
            ],
            options={
                'verbose_name': '归属渠道',
                'verbose_name_plural': '归属渠道',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='CarInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('car_number', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='车牌')),
                ('car_brand', models.CharField(blank=True, max_length=255, null=True, verbose_name='汽车品牌')),
                ('car_model', models.CharField(blank=True, max_length=255, null=True, verbose_name='汽车型号')),
                ('car_price', models.IntegerField(blank=True, null=True, verbose_name='购买价格/万')),
                ('bought_date', models.DateField(blank=True, null=True, verbose_name='购买日期')),
                ('desc', models.TextField(blank=True, max_length=1000, null=True, verbose_name='描述')),
                ('is_confirmed', models.BooleanField(default=False, verbose_name='已审核')),
                ('is_active', models.BooleanField(default=True, verbose_name='有效')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='记录时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('confirmed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='car_info_confirmed_by', to=settings.AUTH_USER_MODEL, verbose_name='审核人员')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='car_info_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建人员')),
            ],
            options={
                'verbose_name': '车辆信息',
                'verbose_name_plural': '车辆信息',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='InsuranceCompany',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True, unique=True, verbose_name='保险出单公司')),
            ],
            options={
                'verbose_name': '保险出单公司',
                'verbose_name_plural': '保险出单公司',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ServicePackage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True, unique=True, verbose_name='名称')),
                ('desc', models.CharField(blank=True, max_length=200, null=True, verbose_name='介绍')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='价格')),
            ],
            options={
                'verbose_name': '服务套餐',
                'verbose_name_plural': '服务套餐',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ServicePackageType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True, unique=True, verbose_name='名称')),
                ('desc', models.CharField(blank=True, max_length=200, null=True, verbose_name='介绍')),
            ],
            options={
                'verbose_name': '套餐归类',
                'verbose_name_plural': '套餐归类',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='StoreInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True, unique=True, verbose_name='名称')),
                ('contact', models.CharField(blank=True, max_length=200, null=True, verbose_name='联系电话')),
                ('address', models.TextField(blank=True, max_length=1000, null=True, verbose_name='地址')),
                ('desc', models.TextField(blank=True, max_length=2000, null=True, verbose_name='介绍')),
            ],
            options={
                'verbose_name': '门店信息',
                'verbose_name_plural': '门店信息',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='UserLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level_code', models.SmallIntegerField(null=True, unique=True, verbose_name='等级编号')),
                ('level_name', models.CharField(max_length=100, null=True, unique=True, verbose_name='等级名称')),
                ('desc', models.TextField(blank=True, max_length=1000, null=True, verbose_name='等级描述')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='记录时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '用户等级',
                'verbose_name_plural': '用户等级',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Superior',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True, unique=True, verbose_name='名字')),
                ('mobile', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='手机号')),
                ('desc', models.TextField(blank=True, max_length=1000, null=True, verbose_name='描述')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='记录时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('confirmed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='superior_confirmed_by', to=settings.AUTH_USER_MODEL, verbose_name='审核人员')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='superior_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建人员')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='关联账号')),
            ],
            options={
                'verbose_name': '工作人员',
                'verbose_name_plural': '工作人员',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ServiceRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reserve_type', models.IntegerField(blank=True, choices=[(1, '上门'), (2, '到店')], null=True, verbose_name='类型')),
                ('is_reversed', models.BooleanField(default=False, verbose_name='是预约服务')),
                ('reserve_time', models.DateTimeField(blank=True, null=True, verbose_name='服务时间')),
                ('reserve_address', models.TextField(blank=True, max_length=1000, null=True, verbose_name='服务地点')),
                ('is_checked', models.BooleanField(default=False, verbose_name='已联系/已确认')),
                ('is_served', models.BooleanField(default=False, verbose_name='服务已完成')),
                ('notes', models.TextField(blank=True, max_length=1000, null=True, verbose_name='备注')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='记录时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('car', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.CarInfo', verbose_name='车辆信息')),
                ('checked_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_record_check_by', to='app.Superior', verbose_name='由谁联系')),
                ('confirmed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_record_confirmed_by', to=settings.AUTH_USER_MODEL, verbose_name='审核人员')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_record_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建人员')),
                ('related_store', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.StoreInfo', verbose_name='门店')),
                ('served_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_record_served_by', to='app.Superior', verbose_name='由谁服务')),
                ('service_package', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.ServicePackage', verbose_name='服务套餐')),
            ],
            options={
                'verbose_name': '服务记录',
                'verbose_name_plural': '服务记录',
                'ordering': ['-id'],
            },
        ),
        migrations.AddField(
            model_name='servicepackage',
            name='service_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.ServicePackageType', verbose_name='归类'),
        ),
        migrations.CreateModel(
            name='ServiceApply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('car_number', models.CharField(max_length=100, null=True, verbose_name='车牌')),
                ('car_brand', models.CharField(blank=True, max_length=255, null=True, verbose_name='汽车品牌')),
                ('car_model', models.CharField(blank=True, max_length=255, null=True, verbose_name='汽车型号')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='名字')),
                ('mobile', models.CharField(max_length=255, null=True, verbose_name='手机')),
                ('reserve_type', models.IntegerField(blank=True, choices=[(1, '上门'), (2, '到店')], null=True, verbose_name='类型')),
                ('reserve_time', models.DateTimeField(blank=True, null=True, verbose_name='服务时间')),
                ('reserve_address', models.TextField(blank=True, max_length=1000, null=True, verbose_name='服务地点')),
                ('is_checked', models.BooleanField(default=False, verbose_name='已联系/已确认')),
                ('data_import', models.BooleanField(default=False, verbose_name='数据导入')),
                ('notes', models.TextField(blank=True, max_length=1000, null=True, verbose_name='备注')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='记录时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('checked_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_apply_check_by', to='app.Superior', verbose_name='由谁联系')),
                ('confirmed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_apply_confirmed_by', to=settings.AUTH_USER_MODEL, verbose_name='审核人员')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_apply_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建人员')),
                ('related_record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.ServiceRecord', verbose_name='关联记录')),
                ('related_store', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.StoreInfo', verbose_name='门店')),
                ('service_package', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.ServicePackage', verbose_name='服务套餐')),
            ],
            options={
                'verbose_name': '维修服务申请',
                'verbose_name_plural': '维修服务申请',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='InsuranceRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_date', models.DateField(null=True, verbose_name='签单日期')),
                ('insurance_date', models.DateField(blank=True, null=True, verbose_name='保单开始日期')),
                ('total_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='含税总保费')),
                ('tax', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='车船税')),
                ('has_payback', models.BooleanField(default=False, verbose_name='是否已返费')),
                ('payback_percent', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='已返费率')),
                ('payback_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='已返金额')),
                ('is_payed', models.BooleanField(default=True, verbose_name='已支付')),
                ('notes', models.TextField(blank=True, max_length=1000, null=True, verbose_name='备注')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='记录时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('belong_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.BelongTo', verbose_name='归属渠道')),
                ('car', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.CarInfo', verbose_name='车辆信息')),
                ('confirmed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='insurance_record_confirmed_by', to=settings.AUTH_USER_MODEL, verbose_name='审核人员')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='insurance_record_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建人员')),
                ('insurance_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.InsuranceCompany', verbose_name='保险公司')),
                ('receiver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.Superior', verbose_name='验车人')),
            ],
            options={
                'verbose_name': '投保记录',
                'verbose_name_plural': '投保记录',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='InsuranceApply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('car_number', models.CharField(max_length=100, null=True, verbose_name='车牌')),
                ('car_brand', models.CharField(blank=True, max_length=255, null=True, verbose_name='汽车品牌')),
                ('car_model', models.CharField(blank=True, max_length=255, null=True, verbose_name='汽车型号')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='名字')),
                ('mobile', models.CharField(max_length=255, null=True, verbose_name='手机')),
                ('service_type', models.IntegerField(blank=True, choices=[(1, '车辆续保'), (2, '保险分期'), (3, '购车贷款')], null=True, verbose_name='类别')),
                ('insurance_date', models.DateField(blank=True, null=True, verbose_name='保单开始日期')),
                ('is_checked', models.BooleanField(default=False, verbose_name='已联系/已确认')),
                ('data_import', models.BooleanField(default=False, verbose_name='数据导入')),
                ('notes', models.TextField(blank=True, max_length=1000, null=True, verbose_name='备注')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='记录时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('checked_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='insurance_apply_check_by', to='app.Superior', verbose_name='由谁联系')),
                ('confirmed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='insurance_apply_confirmed_by', to=settings.AUTH_USER_MODEL, verbose_name='审核人员')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='insurance_apply_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建人员')),
                ('related_record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.InsuranceRecord', verbose_name='关联记录')),
            ],
            options={
                'verbose_name': '保险服务申请',
                'verbose_name_plural': '保险服务申请',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='名字')),
                ('mobile', models.CharField(max_length=255, null=True, verbose_name='手机')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='记录时间')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('confirmed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customer_confirmed_by', to=settings.AUTH_USER_MODEL, verbose_name='审核人员')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customer_created_by', to=settings.AUTH_USER_MODEL, verbose_name='创建人员')),
                ('related_superior', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.Superior', verbose_name='客户归属')),
                ('related_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customer_related_user', to=settings.AUTH_USER_MODEL, verbose_name='关联用户')),
            ],
            options={
                'verbose_name': '客户列表',
                'verbose_name_plural': '客户列表',
                'ordering': ['-id'],
                'unique_together': {('name', 'mobile')},
            },
        ),
        migrations.AddField(
            model_name='carinfo',
            name='customer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Customer', verbose_name='客户'),
        ),
        migrations.AddField(
            model_name='wxuser',
            name='user_level',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.UserLevel', verbose_name='用户等级'),
        ),
        migrations.AddField(
            model_name='wxuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
